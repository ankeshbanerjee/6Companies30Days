Deletions to make an array divisible.
(https://leetcode.com/problems/minimum-deletions-to-make-array-divisible/)

CODE:

class Solution {
public:
    bool isDivisible (int n, vector<int>& numsDivide){
        for (int i=0; i<numsDivide.size(); i++){
            if (numsDivide[i] % n != 0)
                return false;
        }
        return true;
    }
    int minOperations(vector<int>& nums, vector<int>& numsDivide) {
        int ans = 0;
        int n = nums.size();
        map<int, int> numsCnt;
        sort (nums.begin(), nums.end());
        for (int i=0; i<n; i++)
            numsCnt[nums[i]]++;

        for (auto it: numsCnt){
            if (!isDivisible(it.first, numsDivide)){
                ans += it.second;
            }
            else
                break;
        }

        if (ans == n)
            return -1;
        else
            return ans;
    }
};