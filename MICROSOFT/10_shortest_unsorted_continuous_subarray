 Shortest Unsorted Continuous Subarray
 (https://leetcode.com/problems/shortest-unsorted-continuous-subarray/)

 CODE:

 class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
        vector <int> original = nums;
        sort (nums.begin(), nums.end());
        int n = nums.size();
        int s=0, e=0;
        for (int i=0; i<n; i++){
            if (original[i] != nums[i]){
                s = i;
                break;
            }
        }
        for (int j=n-1; j>=0; j--){
            if (original[j] != nums[j]){
                e = j;
                break;
            }
        }
        int ans = (s==0 && e==0)? 0 : e-s+1;
        return ans;
    }
};